images:
  ghcr.io/de-groen-solutions/builderbin-aarch64-alacritty:18.04:
    base: "ghcr.io/de-groen-solutions/builderbin-aarch64-rust:18.04"
    steps:
      - install:
        - libfreetype6-dev:arm64
        - libfreetype6:arm64
        - libpng-dev:arm64
        - libpng16-16:arm64
        - libfontconfig1-dev:arm64
          

  ghcr.io/de-groen-solutions/builderbin-aarch64-agentui:18.04:
    base: "ghcr.io/de-groen-solutions/builderbin-aarch64-rust:18.04"
    steps:
      - install:
          - libatk1.0-dev:arm64
          - libcairo2-dev:arm64
          - libgdk-pixbuf2.0-dev:arm64
          - libglib2.0-dev:arm64
          - libgstreamer-plugins-base1.0-dev:arm64
          - libgstreamer1.0-dev:arm64
          - libgtk-3-dev:arm64
          - libpango1.0-dev:arm64
          - libudev-dev:arm64
          - libsystemd-dev:arm64
          - libssl-dev:arm64

  ghcr.io/de-groen-solutions/builderbin-aarch64-rust:18.04:
    base: "ghcr.io/de-groen-solutions/builderbin-aarch64-gcc:18.04"
    steps:
      - env:
          CARGO_HOME: "/root/.cargo"
          RUSTUP_HOME: "/root/.rustup"
          PATH: "/root/.cargo/bin:$PATH"
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: "aarch64-linux-gnu-gcc"
          CARGO_NET_GIT_FETCH_WITH_CLI: "true"
          CARGO_REGISTRIES_CRATES_IO_PROTOCOL: "sparse"
          RUSTC_WRAPPER: "sccache"
          SCCACHE_MEMCACHED: "192.168.0.251:11211"
      #- mount:
      #    type: cache
      #   container: /root/.cargo/registry
      - install:
          - libssl-dev
      - run: |
          curl -sSf https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init -o /usr/bin/rustup-init
          chmod +x /usr/bin/rustup-init
          rustup-init -y --no-modify-path --default-toolchain stable --target aarch64-unknown-linux-gnu
      - run: |
          rustup toolchain install nightly
          rustup target add aarch64-unknown-linux-gnu --toolchain nightly
      - run: |
          RUSTC_WRAPPER= cargo install sccache

  ghcr.io/de-groen-solutions/builderbin-aarch64-gcc:18.04:
    base: "ghcr.io/de-groen-solutions/builderbin-aarch64-base:18.04"
    steps:
      - env:
          PKG_CONFIG_PATH: "/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/local/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/lib/pkgconfig"
          PKG_CONFIG_ALLOW_CROSS: "1"
          PKG_CONFIG_ALL_STATIC: "1"
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
      - install:
          - curl
          - g++-aarch64-linux-gnu
          - gcc
          - libc6-dev-armhf-cross
          - pkg-config
          - wget
          - protobuf-compiler
          - unzip
          - cmake
      - run: |
          wget https://github.com/protocolbuffers/protobuf/releases/download/v3.15.8/protoc-3.15.8-linux-x86_64.zip -O protoc-3.15.8-linux-x86_64.zip
          unzip protoc-3.15.8-linux-x86_64.zip -d ${HOME}/.local

  ghcr.io/de-groen-solutions/builderbin-aarch64-base:18.04:
    image: "ubuntu:18.04"
    steps:
      - env:
          "DEBIAN_FRONTEND": "noninteractive"
          "TZ": "Europe/Amsterdam"
          "CI": "true"

      - sources: |
          deb [arch=amd64,i386] http://nl.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse
          deb [arch=amd64,i386] http://nl.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse
          deb [arch=amd64,i386] http://nl.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse
          deb [arch=amd64,i386] http://security.ubuntu.com/ubuntu bionic-security main restricted universe multiverse

          deb [arch=arm64,armhf,ppc64el,s390x] http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted universe multiverse
          deb [arch=arm64,armhf,ppc64el,s390x] http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted universe multiverse
          deb [arch=arm64,armhf,ppc64el,s390x] http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted universe multiverse
          deb [arch=arm64,armhf,ppc64el,s390x] http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted universe multiverse

      - run: |
          apt-get update
          apt-get install -y wajig
          dpkg --add-architecture arm64
          apt-get clean
          wajig clean
          rm -rdf /var/lib/apt/lists/*
          rm -rdf /tmp/*
          rm -rdf /var/tmp/*
          rm -rdf /var/cache/apt/archives/*

